<?php

namespace IngSoft\DatBundle\Repository;

use Doctrine\ORM\EntityRepository;
use IngSoft\DatBundle\Entity\Pagos as Pagos;

/**
 * PagoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PagoRepository extends EntityRepository
{
     /**
     * Permite crear un contrato nuevo en la base de datos, el codigo del pago
     * no puede estar repetido
     * 
     * 
     * @param \IngSoft\DatBundle\Entity\Pagos $pago
     *                                           pago nuevo en la base de datos
     * 
     * 
     * @return true si el pago se pudo agregar, false si no fue así
     * 
     */
    public function create(Pagos $pago) {
        $em = $this->getEntityManager();
        $pagoU = $em->find($this->getEntityName(), $pago->getCodigo());
        if (!$pagoU) {
            $em->persist($pago);
            $em->flush();
            return true;
        }
        return false;
    }

     /**
     * Permite actualizar a un pago que se encuentre en la base de datos
     * el pago recibido tiene los atributos nuevos
     * 
     * 
     * @param \IngSoft\DatBundle\Entity\Pagos $pago
     *                                           pago con los datos nuevos
     * 
     * @return true si se pudo actualizar, false si no fue así
     */
    public function update(Pagos $pago) {
        $em = $this->getEntityManager();
        $pagoU = $em->find($this->getEntityName(), $pago->getCodigo());
        if ($pagoU) {
            $em->persist($pago);
            $em->flush();
            return true;
        }
        return false;
    }

    /**
     * Permite buscar a un pago según su cedula
     * 
     * 
     * @param type $codigo
     *        codigo del pago que se quiere buscar
     * 
     * @return pago encontrado
     * 
     */
    public function find($codigo) {
        $em = $this->getEntityManager();
        $pagoU = $em->find($this->getEntityManager(), $codigo);
        return $pagoU;
    }

    /**
     * Permite obtener todos los registros de los pagos
     * 
     * 
     * @return todos los pagos de la base de datos
     */
    public function getAll() {
        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT p FROM Pagos p");
        return $query->getResult();
    }

    /**
     * Permite borrar a un pago según su cedula
     * 
     * 
     * @param type $codigo
     *             codigo del pago que se quiere borrar
     * 
     * @return true si se puede borrar, false si no fue así
     */
    public function delete($codigo) {
        $em = $this->getEntityManager();
        $pagoU = $em->find($this->getEntityManager(), $codigo);
        if (!$pagoU) {
            $em->remove($pagoU);
            $em->flush();
            return true;
        }
        return false;
    }
}
